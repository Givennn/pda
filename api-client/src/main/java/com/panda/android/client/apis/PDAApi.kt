///**
// * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: mes
// *
// * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
// */
//
//package com.panda.android.client.apis
//
//import com.panda.android.client.models.*
//import io.reactivex.rxjava3.core.Single
//import okhttp3.RequestBody
//import retrofit2.http.GET
//import retrofit2.http.Headers
//import retrofit2.http.POST
//
//@JvmSuppressWildcards
//interface PDAApi {
//    /**
//     * 获取用户信息
//     *
//     * The endpoint is owned by docs service owner
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/admin/user/info")
//    fun pdaAdminUserInfoGet(
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaAdminUserInfoGetResponse>
//    /**
//     * 登出
//     *
//     * The endpoint is owned by docs service owner
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @POST("pda/admin/user/logout")
//    fun pdaAdminUserLogoutPost(
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<InlineResponse200>
//    /**
//     * 登陆
//     *
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/admin/user/name-login")
//    fun pdaAdminUserNameLoginPost(
//        @retrofit2.http.Body root: LoginRequest
//    ): Single<PdaAdminUserNameLoginPostResponse>
//    /**
//     * 修改密码/校验
//     *
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/admin/user/password/check")
//    fun pdaAdminUserPasswordCheckPost(
//        @retrofit2.http.Body root: EmptyObject
//    ): Single<InlineResponse2001>
//    /**
//     * 修改密码/修改
//     *
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/admin/user/password/modify")
//    fun pdaAdminUserPasswordModifyPost(
//        @retrofit2.http.Body root: EmptyObject
//    ): Single<InlineResponse2001>
//    /**
//     * 文件上传
//     *
//     * The endpoint is owned by docs service owner
//     * @param file (required)
//     */
//    @retrofit2.http.Multipart
//    @POST("pda/common/upload-file")
//    fun pdaCommonUploadFilePost(
//        @retrofit2.http.Part("file\"; filename=\"file") file: RequestBody
//    ): Single<PdaCommonUploadFilePostResponse>
//    /**
//     * 查询数据字典
//     *
//     * The endpoint is owned by docs service owner
//     * @param paramName  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/config/sys-param/list-by-param")
//    fun pdaConfigSysParamListByParamGet(
//        @retrofit2.http.Query("paramName") paramName: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaConfigSysParamListByParamGetResponse>
//    /**
//     * 新增警报
//     * status  状态 1未关闭 2关闭
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/fms/alarm/add")
//    fun pdaFmsAlarmAddPost(
//        @retrofit2.http.Body root: EmptyObject
//    ): Single<EmptyObject8>
//    /**
//     * 警报历史查询
//     * status  状态 1未关闭 2关闭
//     * The endpoint is owned by docs service owner
//     * @param page  (required)
//     * @param rows  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/alarm/my-history")
//    fun pdaFmsAlarmMyHistoryGet(
//        @retrofit2.http.Query("page") page: String,
//        @retrofit2.http.Query("rows") rows: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsAlarmMyHistoryGetResponse>
//    /**
//     * 查询报工详情
//     *
//     * The endpoint is owned by docs service owner
//     * @param id  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/report/get-by-id")
//    fun pdaFmsReportGetByIdGet(
//        @retrofit2.http.Query("id") id: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsReportGetByIdGetResponse>
//    /**
//     * 全部报工列表
//     * keywords：任务编号/任务描述
//     * The endpoint is owned by docs service owner
//     * @param keywords  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/report/list-all")
//    fun pdaFmsReportListAllGet(
//        @retrofit2.http.Query("keywords") keywords: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsReportListAllGetResponse>
//    /**
//     * 任务完工
//     *
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/fms/task/complete/confirm")
//    fun pdaFmsTaskCompleteConfirmPost(
//        @retrofit2.http.Body root: EmptyObject
//    ): Single<EmptyObject8>
//    /**
//     * 任务完工列表
//     * keywords：任务编号  产品编码或者描述  派工人工号或者姓名
//     * The endpoint is owned by docs service owner
//     * @param keywords  (optional)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/task/complete/list-by-page")
//    fun pdaFmsTaskCompleteListByPageGet(
//        @retrofit2.http.Query("keywords") keywords: String?,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsTaskCompleteListByPageGetResponse>
//    /**
//     * 执行任务
//     *
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/fms/task/execution/confirm")
//    fun pdaFmsTaskExecutionConfirmPost(
//        @retrofit2.http.Body root: EmptyObject
//    ): Single<EmptyObject8>
//    /**
//     * 任务执行列表
//     * keywords：任务编号  产品编码或者描述  派工人工号或者姓名
//     * The endpoint is owned by docs service owner
//     * @param keywords  (optional)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/task/execution/list-by-page")
//    fun pdaFmsTaskExecutionListByPageGet(
//        @retrofit2.http.Query("keywords") keywords: String?,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsTaskExecutionListByPageGetResponse>
//    /**
//     * 任务详情
//     *
//     * The endpoint is owned by docs service owner
//     * @param id  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/task/get-by-id")
//    fun pdaFmsTaskGetByIdGet(
//        @retrofit2.http.Query("id") id: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsTaskGetByIdGetResponse>
//    /**
//     * 未取消任务列表
//     * keywords：任务编号/任务描述
//     * The endpoint is owned by docs service owner
//     * @param keywords  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/task/list-all")
//    fun pdaFmsTaskListAllGet(
//        @retrofit2.http.Query("keywords") keywords: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsTaskListAllGetResponse>
//    /**
//     * 产品物料替换绑定物料
//     *
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/fms/task/material/bind-change")
//    fun pdaFmsTaskMaterialBindChangePost(
//        @retrofit2.http.Body root: EmptyObject
//    ): Single<EmptyObject4>
//    /**
//     * 绑定产品物料
//     *
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/fms/task/material/bind")
//    fun pdaFmsTaskMaterialBindPost(
//        @retrofit2.http.Body root: EmptyObject
//    ): Single<EmptyObject4>
//    /**
//     * 任务列表
//     * keywords：任务编号/产品编码/产品描述/派工人
//     * The endpoint is owned by docs service owner
//     * @param keywords  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/task/material/task/list-by-page")
//    fun pdaFmsTaskMaterialTaskListByPageGet(
//        @retrofit2.http.Query("keywords") keywords: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsTaskMaterialTaskListByPageGetResponse>
//    /**
//     * 查询已绑定的物料
//     * keywords：任务编号/产品编码/产品描述/派工人
//     * The endpoint is owned by docs service owner
//     * @param taskId  (required)
//     * @param productBarCode  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/task/material/task/query-bind-by-product")
//    fun pdaFmsTaskMaterialTaskQueryBindByProductGet(
//        @retrofit2.http.Query("taskId") taskId: String,
//        @retrofit2.http.Query("productBarCode") productBarCode: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsTaskMaterialTaskQueryBindByProductGetResponse>
//    /**
//     * 绑定/查询物料
//     *
//     * The endpoint is owned by docs service owner
//     * @param materielSerialCode  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/task/material/task/query-material")
//    fun pdaFmsTaskMaterialTaskQueryMaterialGet(
//        @retrofit2.http.Query("materielSerialCode") materielSerialCode: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsTaskMaterialTaskQueryMaterialGetResponse>
//    /**
//     * 产品物料解绑
//     *
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/fms/task/material/unbind")
//    fun pdaFmsTaskMaterialUnbindPost(
//        @retrofit2.http.Body root: EmptyObject
//    ): Single<EmptyObject4>
//    /**
//     * 任务操作记录
//     *
//     * The endpoint is owned by docs service owner
//     * @param id  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/task/operation-record")
//    fun pdaFmsTaskOperationRecordGet(
//        @retrofit2.http.Query("id") id: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsTaskOperationRecordGetResponse>
//    /**
//     * 接收任务
//     *
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/fms/task/receive/confirm")
//    fun pdaFmsTaskReceiveConfirmPost(
//        @retrofit2.http.Body root: EmptyObject
//    ): Single<EmptyObject8>
//    /**
//     * 任务接收列表
//     * keywords：任务编号/产品编码/产品描述/派工人
//     * The endpoint is owned by docs service owner
//     * @param keywords  (optional)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/task/receive/list-by-page")
//    fun pdaFmsTaskReceiveListByPageGet(
//        @retrofit2.http.Query("keywords") keywords: String?,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsTaskMaterialTaskListByPageGetResponse>
//    /**
//     * 任务报工
//     *
//     * The endpoint is owned by docs service owner
//     * @param root (optional)
//     */
//    @Headers(
//        "Content-Type: application/json"
//    )
//    @POST("pda/fms/task/report/confirm")
//    fun pdaFmsTaskReportConfirmPost(
//        @retrofit2.http.Body root: EmptyObject
//    ): Single<EmptyObject8>
//    /**
//     * 任务报工列表
//     * keywords：任务编号  产品编码或者描述  派工人工号或者姓名
//     * The endpoint is owned by docs service owner
//     * @param keywords  (optional)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/task/report/list-by-page")
//    fun pdaFmsTaskReportListByPageGet(
//        @retrofit2.http.Query("keywords") keywords: String?,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsTaskReportListByPageGetResponse>
//    /**
//     * 作业指导书列表
//     *
//     * The endpoint is owned by docs service owner
//     * @param keywords  (required)
//     * @param page  (required)
//     * @param rows  (required)
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/fms/work-guide/list")
//    fun pdaFmsWorkGuideListGet(
//        @retrofit2.http.Query("keywords") keywords: String,
//        @retrofit2.http.Query("page") page: String,
//        @retrofit2.http.Query("rows") rows: String,
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaFmsWorkGuideListGetResponse>
//    /**
//     * 任务/查询任务数量
//     *
//     * The endpoint is owned by docs service owner
//     * @param raw raw paramter (optional)
//     */
//    @Headers(
//        "Content-Type: text/plain"
//    )
//    @GET("pda/task/msg-count")
//    fun pdaTaskMsgCountGet(
//        @retrofit2.http.Body raw: List<Byte>?
//    ): Single<PdaTaskMsgCountGetResponse>
//}
